	.file	"simple.c"
	.intel_syntax noprefix
	.text
	.globl	f1
	.type	f1, @function
f1:
.LFB0:
	push	rbp
	mov	rbp, rsp
	mov	DWORD PTR [rbp-20], edi
	mov	DWORD PTR [rbp-4], 10
	mov	eax, DWORD PTR [rbp-4]
	mov	edx, DWORD PTR [rbp-20]
	add	eax, edx
	pop	rbp
	ret
.LFE0:
	.size	f1, .-f1
	.section	.rodata
.LC0:
	.string	"%s\n"
	.text
	.globl	f2
	.type	f2, @function
f2:
.LFB1:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	lea	rax, [rbp-16]
	mov	rdi, rax
	call	gets
	lea	rax, [rbp-16]
	mov	rsi, rax
	mov	edi, OFFSET FLAT:.LC0
	mov	eax, 0
	call	printf
	leave
	ret
.LFE1:
	.size	f2, .-f2
	.section	.rodata
	.align 8
.LC1:
	.string	"In main. Calling f1 with 15 as a param.\n"
	.align 8
.LC2:
	.string	"Back in main from f1. Printing result.\n"
.LC3:
	.string	"Result of f1(15) is %d.\n"
.LC4:
	.string	"Still in main, calling f2\n"
	.align 8
.LC5:
	.string	"Back in main. Exiting with 0 because I assume everything went okay.\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB2:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	DWORD PTR [rbp-20], edi
	mov	QWORD PTR [rbp-32], rsi
	mov	DWORD PTR [rbp-4], 0
	mov	edi, OFFSET FLAT:.LC1
	mov	eax, 0
	call	printf
	mov	edi, 15
	call	f1
	mov	DWORD PTR [rbp-4], eax
	mov	edi, OFFSET FLAT:.LC2
	mov	eax, 0
	call	printf
	mov	eax, DWORD PTR [rbp-4]
	mov	esi, eax
	mov	edi, OFFSET FLAT:.LC3
	mov	eax, 0
	call	printf
	mov	edi, OFFSET FLAT:.LC4
	mov	eax, 0
	call	printf
	call	f2
	mov	edi, OFFSET FLAT:.LC5
	mov	eax, 0
	call	printf
	mov	eax, 0
	leave
	ret
.LFE2:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 4.8.4-2ubuntu1~14.04.1) 4.8.4"
	.section	.note.GNU-stack,"",@progbits
